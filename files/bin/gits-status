#!/bin/bash -e

die() { echo $@; exit 1; }

do_clean() {
  pushd . > /dev/null

  DIR="$1"

  cd $DIR
  local mod=$(git status --short | wc -l)
  local new=$(git ls-files -o --exclude-standard | wc -l)
  local branch=$(git status | egrep -i 'on branch .*$' | cut -d' ' -f3-)

  if [[ $new == 0 && $mod == 0 ]]; then
    printf -- "------------------------- clean ---- %s %-14s %s\n"  $(hostname)  $branch  $DIR
    git status | sed -n '/up-to-date/d;/Your branch is/p'
  fi

  popd > /dev/null
}

do_changed() {
  pushd . > /dev/null

  DIR="$1"

  cd $DIR
  local mod=$(git status --short | wc -l)
  local new=$(git ls-files -o --exclude-standard | wc -l)
  local branch=$(git status | egrep -i 'on branch .*$' | cut -d' ' -f3-)

  if [[ $new != 0 || $mod != 0 ]]; then
    printf -- "------------------------------------ %s %-14s %s\n"  $(hostname)  $branch  $DIR
    git status --short
  fi

  popd > /dev/null
}


# ----- Determine the root dir --------------------------------------------------------------------

target_dir="$1"
[[ -n $target_dir ]] || target_dir="${HOME}/dev"

[[ -d $target_dir ]] || die "$target_dir is not a directory"

# Make sure git is setup
git config --global --get 'user.email' | egrep 'briancsparks' || git config --global --list

repositories="$(find $target_dir -type d | egrep '\.git$' | egrep -v 'X/\.git$' | egrep -v '/dev/[^/]+X/' | sort)"
#echo "Repos: $repositories"

# ----- Now, loop over the repos ------------------------------------------------------------------

# Display changed
for d in $repositories; do
  dir="$(dirname $(dirname $d/..))"

  do_changed $dir
done

# Display clean dirs
for d in $repositories; do
  dir="$(dirname $(dirname $d/..))"

  do_clean $dir
done

if [[ -d "$HOME/dotfiles" ]]; then
  do_changed "$HOME/dotfiles"
  do_clean "$HOME/dotfiles"
fi




